install.packages(kernsmooth)
?kernsmooth
??kernsmooth
install.packages(KernSmooth)
install.packages(KernSmooth)
?KernSmooth
??KernSmooth
install.packages("KernSmooth")
kernsmooth
load.packages(kernsmooth)
library(KernSmooth)
demo()
plotmath
demo(plotmath)
xx <- c(1.7 'a')
xx <- c(1.7 "a")
xx <- c(1.7, "a")
xx
xx <- (TRUE, 2)
xx <- c(TRUE, 2)
xx
xx <- c("a", TRUE)
xx
library(datasets)
data(iris)
?iris
Sepal.Length
iris.Sepal.Length
dat <- data(iris)
dat
iris
iris[Sepal.Width]
iris$Sepal.Width
library(swirl)
swirl
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags[,] unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
unique_vals2 <- sapply(flags, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?samplt
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
fpois(5, 10)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
library(datasets)
data(iris)
class(iris)
head(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
avs <- tapply(mtcars$cyl, mtcars$mpg, mean)
range(avs)
with(mtcars, tapply(mpg, cyl, mean))
avs <- with(mtcars, tapply(mpg, cyl, mean))
range(avs)
26.66364 - 15.10000
debug(ls)
ls
ls()
exit
library(datasets)
data(iris)
?iris
lapply(iris$SepalLength, iris$Species, mean)
head(iris)
lapply(iris$SepalLength, iris$Species, mean)
lapply(iris$SepalLength, iris$Species, mean)
tapply(iris$SepalLength, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
i
j
setmean
getmean
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, key=sex_class, value=count)
res <- gather(students2, key=sex_class, value=count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
students4
submit()
?unique
submit()
submit()
passed
failed
mutate(passed, status = "passed")
info()
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
?group_by
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label=TRUE)
this_moment(now)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(20951985)
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1-9-2012")
dmy("1-9-2012")
mdy("1-9-2012")
mdy("1/9/2012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours=8, minutes=34, seconds=55)
this_moment
this_moment <- update(this_moment, hours=14, minutes=59
)
this_moment
?now
nyc <- now(tzone="America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart + hours(17) + minutes(34))
depart <- update(depart + hours=17 + minutes =34)
depart <- update(depart, hours=17,  minutes =34)
depart
arrive <- update(depart, hours=15, minutes=50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz((depart + hours(15) + minutes(50)), "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?text
?lines
?llines
?trellis.par.set
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
?geom
??geom
?ggplot
NEI <- readRDS("summarySCC_PM25.rds")
pwd
getwd()
setwd("/Users/vs/Dropbox/Data_Science_Course/Reproducible_Research/RepData_PeerAssessment1/")
unzip("activity.zip")
ls
ls()
df <- read.csv("activity.csv")
df
names(df)
?aggregate
sum_by_date <- aggregate(df, by='date', FUN=sum)
sum_by_date <- aggregate(df, by=date, FUN=sum)
sum_by_date <- aggregate(df, by=df.date, FUN=sum)
df.date
df[1]
names(df)
df.date
date
df[date]
df.interval
df[interval]
df[2]
sum_by_date <- aggregate(df, by=(2), FUN=sum)
sum_by_date <- aggregate(df, by=2, FUN=sum)
sum_by_date <- aggregate(df, by=[2], FUN=sum)
sum_by_date <- aggregate(df, by='2', FUN=sum)
sum_by_date <- aggregate(df, by=df[2], FUN=sum)
df[2]
df[1]
df[0]
df.names
df(names)
names(df)
?names
df$date
sum_by_date <- aggregate(df, by=df$date, FUN=sum)
sum_by_date <- aggregate(df, by='df$date', FUN=sum)
sum_by_date <- aggregate(df, by=(df$date), FUN=sum)
?aggregate
sum_by_date <- aggregate(df, FUN=sum)
60*24
1440/5.
sum_by_date <- aggregate(df, nfrequency=288, FUN=sum)
sum_by_date <- aggregate.ts(df, nfrequency=288, FUN=sum)
sum_by_date <- aggregate.ts(df, FUN=sum)
sum_by_date
head(sum)by_date
head(sum_by_date)
head(df)
sum_by_date <- aggregate.ts(df, nfrequency=288, FUN=sum)
?apply.daily
??apply.daily
sum_by_date <- apply.daily(df, FUN=sum)
library(xts)
library(xts)
sum_by_date <- apply.daily(df, FUN=sum)
?xts
names(df)
xts.ts <- xts(df$date + ds$interval)
xts.ts <- xts(df$date + df$interval)
df$date
df$interval
time_ser <- ts(df)
time_ser
head(time_ser)
?ts
head(df)
time_ser <- ts(df, frequency=365)
head(time_ser)
ts.aggregate(df$steps)
aggregate.ts(df$steps)
len(aggregate.ts(df$steps))
size(aggregate.ts(df$steps))
shape(aggregate.ts(df$steps))
length(aggregate.ts(df$steps))
length(df$steps)
length(aggregate.ts(df, df$date))
as.Date(df$date)
df$date <- as.Date(df$date)
?as.Time
??as.Time
?as.Date
length(aggregate.ts(df, df$date))
aggregate.ts(df, df$date)
aggregate.ts(df$steps, df$date)
df$date
apply.daily(df$steps, sum)
apply.daily(df$date sum)
apply.daily(df$date, sum)
apply.daily(df$date, sum(df$steps))
apply.daily(df$date, fun=sum(df$steps))
aggregate(df, nf=288)
aggregate(df, nf=288, fun=sum)
aggregate(df, nf=288, FUN=sum)
aggregate(df, by=df$date, nf=288, FUN=sum)
aggregate.ts(df, nf=288, FUN=sum)
aggregate.ts(df, nf=1 FUN=sum)
aggregate.ts(df, nf=1, FUN=sum)
head(aggregate.ts(df, nf=1, FUN=sum))
head(aggregate.ts(df$steps, nf=1, FUN=sum))
aggregate.ts(df$steps, nf=1, FUN=sum))
aggregate.ts(df$steps, nf=1, FUN=sum)
aggregate.ts(df$steps, nf=288, FUN=sum)
aggregate.ts(df$steps, nf=288, FUN=sum, by = list(Group.date = df$date))
aggregate.ts(df$steps, FUN=sum, by = list(Group.date = df$date))
list(Group.date = df$date)
library(dplyr)
?group_by
grouped_by_date <- group_by(df, date)
grouped_by_date
library(data.table)
dt = as.data.table(df)
grouped_by_date <- group_by(dt, date)
names(dt)
grouped_by_date
head(dt)
dt[, lapply(.SD, sum), by = Date]
dt[, lapply(.SD, sum), by = date]
?mean
hist(grouped_by_date$steps)
hist(grouped_by_date$steps, na.rm=TRUE)
hist(grouped_by_date$steps)
?hist
library(ggplot)
library(ggplot2)
?hist
?ggplot
ggplot(grouped_by_date$steps)
grouped_by_date$steps
grouped_by_date
grouped_by_date <- dt[, lapply(.SD, sum), by = date]
grouped_by_date
hist(grouped_by_date$steps)
?hist
?median
?plot
grouped_by_interval <- dt[, lapply(.SD, mean), by = interval]
head(grouped_by_interval)
grouped_by_interval <- dt[, lapply(.SD, mean(na.rm=TRUE)), by = interval]
head(grouped_by_interval)
min(grouped_by_interval$steps)
max(grouped_by_interval$steps)
grouped_by_interval <- dt[, lapply(.SD, sum, by = interval]
grouped_by_interval <- dt[, lapply(.SD, sum), by = interval]
head(grouped_by_interval)
min(grouped_by_interval)
max(grouped_by_interval)
max(grouped_by_interval, na.rm=TRUE)
min(grouped_by_interval, na.rm=TRUE)
grouped_by_interval <- dt[, lapply(.SD, mean), by = interval]
max(grouped_by_interval, na.rm=TRUE)
min(grouped_by_interval, na.rm=TRUE)
min(grouped_by_interval$steps, na.rm=TRUE)
grouped_by_interval <- dt[, lapply(.SD, sum), by = interval]
min(grouped_by_interval$steps, na.rm=TRUE)
?lapply
dt
min(dt$steps)
min(dt$steps, na.rm=TRUE)
max(dt$steps, na.rm=TRUE)
grouped_by_interval <- dt$steps[, lapply(.SD, sum), by = interval]
grouped_by_interval <- dt[, lapply(.SD, sum(steps)), by = interval]
grouped_by_interval
?sort
sort(dt, interval)
